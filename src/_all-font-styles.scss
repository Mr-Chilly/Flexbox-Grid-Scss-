/// List of available type settings, **(NOTE: when updating $typography also update the all-font-styles mixin)**
/// @type variable
$typograghy: (
  'very-loud',
  'loud',
  'confident',
  'strong',
  'details',
  'formal',
  'formal-original',
  'formal-light',
  'primary-elegant',
  'primary-original',
  'primary-footnote',
  'error',
  'success',
  'very-loud-mobile'
);
/// Generates a selector **(NOTE: when updating $typography variable also update this mixin)**
/// @param {variable} $selector -  The root selector of the generated rule e.g. '.atom-button .'
/// @param {variable} $identifier - The identifier is prepended to the generated rule
/// @example scss - All font styles mixin
///		@include all-font-styles('.atom-button .', '-type');
///
/// 	Generates:
///
/// 	.atom-button .very-loud { FONT_STYLES }
/// 	.atom-button .loud { FONT_STYLES }
/// 	.atom-button .confident { FONT_STYLES }
///
/// 	etc ...

@mixin all-font-styles($selector, $identifier) {
  @each $style in $typograghy {
    @if $style == 'very-loud' {
      #{$selector}#{$style}#{$identifier} {
        @include style-very-loud;
      }
    }
    @if $style == 'loud' {
      #{$selector}#{$style}#{$identifier} {
        @include style-loud;
      }
    }
    @if $style == 'confident' {
      #{$selector}#{$style}#{$identifier} {
        @include style-confident;
      }
    }
    @if $style == 'strong' {
      #{$selector}#{$style}#{$identifier} {
        @include style-strong;
      }
    }
    @if $style == 'details' {
      #{$selector}#{$style}#{$identifier} {
        @include style-details;
      }
    }
    @if $style == 'formal' {
      #{$selector}#{$style}#{$identifier} {
        @include style-formal;
      }
    }
    @if $style == 'formal-original' {
      #{$selector}#{$style}#{$identifier} {
        @include style-formal-original;
      }
    }
    @if $style == 'formal-light' {
      #{$selector}#{$style}#{$identifier} {
        @include style-formal-light;
      }
    }
    @if $style == 'primary-elegant' {
      #{$selector}#{$style}#{$identifier} {
        @include style-primary-elegant;
      }
    }
    @if $style == 'primary-original' {
      #{$selector}#{$style}#{$identifier} {
        @include style-primary-original;
      }
    }
    @if $style == 'primary-footnote' {
      #{$selector}#{$style}#{$identifier} {
        @include style-primary-footnote;
      }
    }
    @if $style == 'error' {
      #{$selector}#{$style}#{$identifier} {
        @include style-error;
      }
    }
    @if $style == 'success' {
      #{$selector}#{$style}#{$identifier} {
        @include style-success;
      }
    }
  }
}


@mixin font-selector($style) {
  @if $style == 'very-loud' {
    @include style-very-loud;
  }
  @if $style == 'loud' {
    @include style-loud;
  }
  @if $style == 'confident' {
    @include style-confident;
  }
  @if $style == 'strong' {
    @include style-strong;
  }
  @if $style == 'details' {
    @include style-details;
  }
  @if $style == 'formal' {
    @include style-formal;
  }
  @if $style == 'formal-original' {
    @include style-formal-original;
  }
  @if $style == 'formal-light' {
    @include style-formal-light;
  }
  @if $style == 'primary-elegant' {
    @include style-primary-elegant;
  }
  @if $style == 'primary-original' {
    @include style-primary-original;
  }
  @if $style == 'primary-footnote' {
    @include style-primary-footnote;
  }
  @if $style == 'error' {
    @include style-error;
  }
  @if $style == 'success' {
    @include style-success;
  }
}


@mixin block-content-style($styleMap) {
  @each $element, $style in $styleMap {
    #{$element} {
      @include font-selector($style);
    }
  }
}
